import requests


slice = ['10.1088/1742-6596/1315/1/012001', '10.1088/1742-6596/1329/1/012003', '10.1088/1742-6596/1315/1/012033', '10.1088/1742-6596/1582/1/012052', '10.1088/1742-6596/1576/1/012023', '10.1088/1742-6596/1585/1/012026', '10.1088/1742-6596/1572/1/012071', '10.1088/1742-6596/1275/1/012013', '10.1088/1742-6596/1572/1/012067', '10.1088/1742-6596/1582/1/012004', '10.1088/1742-6596/1232/1/012022', '10.1088/1742-6596/1299/1/012113', '10.1088/1742-6596/1315/1/012073', '10.1088/1742-6596/1315/1/012059', '10.1088/1742-6596/1315/1/012064', '10.1088/1742-6596/1582/1/012014', '10.1088/1742-6596/1576/1/012015', '10.1088/1742-6596/1297/1/012010', '10.1088/1742-6596/1315/1/012084', '10.1088/1742-6596/1582/1/012011', '10.1088/1742-6596/1315/1/012025', '10.1088/1742-6596/1576/1/012005', '10.1088/1742-6596/1308/1/012010', '10.1088/1742-6596/1285/1/012015', '10.1088/1742-6596/1275/1/012039', '10.1088/1742-6596/1581/1/012040', '10.1088/1742-6596/1260/10/102013', '10.1088/1742-6596/1584/1/012023', '10.1088/1742-6596/1275/1/012024', '10.1088/1742-6596/1581/1/012009', '10.1088/1742-6596/1299/1/012058', '10.1088/1742-6596/1581/1/012062', '10.1088/1742-6596/1260/11/112029', '10.1088/1742-6596/1572/1/012060', '10.1088/1742-6596/1297/1/012035', '10.1088/1742-6596/1572/1/012079', '10.1088/1742-6596/1310/1/012008', '10.1088/1742-6596/1310/1/012014', '10.1088/1742-6596/1319/1/012010', '10.1088/1742-6596/1575/1/012125', '10.1088/1742-6596/1232/1/012017', '10.1088/1742-6596/1275/1/012002', '10.17863/cam.47052', '10.1088/1742-6596/1275/1/012038', '10.1088/1742-6596/1260/3/032016', '10.1088/1742-6596/1584/1/012045', '10.1088/1742-6596/1576/1/012048', '10.1088/1742-6596/1299/1/012085', '10.1088/1742-6596/1285/1/012004', '10.1088/1742-6596/1572/1/012083', '10.1088/1742-6596/1275/1/012008', '10.1088/1742-6596/1315/1/012053', '10.1088/1742-6596/1572/1/012058', '10.1088/1742-6596/1275/1/012014', '10.1088/1742-6596/1582/1/012013', '10.1088/1742-6596/1584/1/012072', '10.1088/1742-6596/1260/5/052021', '10.1088/1742-6596/1575/1/012230', '10.1088/1742-6596/1582/1/012084', '10.1088/1742-6596/1275/1/012064', '10.1088/1742-6596/1299/1/012122', '10.1088/1742-6596/1584/1/012028', '10.1088/1742-6596/1299/1/012069', '10.1088/1742-6596/1582/1/012003', '10.1088/1742-6596/1575/1/012082', '10.1088/1742-6596/1260/11/112033', '10.1088/1742-6596/1582/1/012007', '10.1088/1742-6596/1232/1/012020', '10.1088/1742-6596/1308/1/012023', '10.1088/1742-6596/1299/1/012109', '10.1088/1742-6596/1299/1/012046', '10.1088/1742-6596/1582/1/012068', '10.1088/1742-6596/1582/1/012095', '10.1088/1742-6596/1260/8/082006', '10.1088/1742-6596/1299/1/012127', '10.1088/1742-6596/1582/1/012024', '10.1088/1742-6596/1308/1/012021', '10.1088/1742-6596/1582/1/012055', '10.1088/1742-6596/1308/1/012007', '10.1088/1742-6596/1260/11/112015', '10.1088/1742-6596/1299/1/012098', '10.1088/1742-6596/1299/1/012002', '10.1088/1742-6596/1260/7/072001', '10.1088/1742-6596/1584/1/012040', '10.1088/1742-6596/1584/1/012003', '10.1088/1742-6596/1315/1/012016', '10.1088/1742-6596/1260/2/022009', '10.1088/1742-6596/1585/1/012038', '10.1088/1742-6596/1582/1/012062', '10.1088/1742-6596/1582/1/012086', '10.1088/1742-6596/1582/1/012079', '10.1088/1742-6596/1585/1/012018', '10.1088/1742-6596/1578/1/012080', '10.1088/1742-6596/1584/1/012009', '10.1088/1742-6596/1581/1/012060', '10.1088/1742-6596/1582/1/012083', '10.1088/1742-6596/1578/1/012035', '10.1088/1742-6596/1232/1/012045', '10.1088/1742-6596/1308/1/012006', '10.1088/1742-6596/1297/1/012006']

pipe_separated_dois = "|".join(slice)


print(f"https://api.openalex.org/works?filter=doi:{pipe_separated_dois}&per-page=100")

# response = requests.get(f"https://api.openalex.org/works?filter=doi:{pipe_separated_dois}&per-page=100")

# # print the response error message
# print(response)

# json_response = response.json()

# # save the response to a file with indent
# with open('failed_query.json', 'w') as f:
#     json.dump(json_response, f, indent=4)
